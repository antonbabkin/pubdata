---
title: "General package interface of public data"
format:
  html:
    toc: true
    code-overflow: wrap
editor: source
author: Isabella Jiang
---

The general package interface for public data (pubdata) provide a list of operation that enables exploration and interaction with the data collections, specifically using `ls()`, `meta()`,and `get()`.

## `ls()`: list available data:

-   Print a list of all available data collections.

```{r}
pubdata::ls()
```

-   `detail`: print the data collections with addtional details for each data collection (description, cache file, etc).

```{r}
pubdata::ls(detail = TRUE)
```

-   `collection`: print the available keys in a specific collection, for example, to print the keys in the `naics` collection:

```{r}
pubdata::ls(collection = "naics")

# obtain the keys with additional details
pubdata::ls(collection = "naics", detail = TRUE)
```

-   `pattern`: print all the keys that match specific regex pattern within the data collection. For example, to print the keys with regex pattern `2022` in the `naics` collection:

```{r}
pubdata::ls(collection = "naics", pattern = "2022")

# print the keys with details
pubdata::ls(collection = "naics", pattern = "2022", detail = TRUE)
```

## `meta()`: metadata collection

-   obtain the metadata of a specific collection or all keys within the collection (argument `collection` must be included)

-   `collection`: for data collections, `meta()` will provide information about:

    -   "**desc**": description
    -   "**urls**": a list of link to the source of the data collection
    -   "**data_keys**": the number of keys within the data collection

For example, to print the metadata of the `ers_rural` collection:

```{r}
pubdata::meta("ers_rural", print = TRUE)
```

-   `key`: for a specific **dataset** within the data collections, `meta()` will provide information including:
    -   "**mask**": naming pattern
    -   "**desc**": description
    -   "**type**": data format (usually "table")
    -   "**path**": internal path of the dataset
    -   "**depends**": dataset dependencies
    -   "**schema**": the description for variables in the dataset
    -   "**keys**": regex pattern used to obtain the dataset

For example, to print the metadata of the `ruc_2023` dataset within the `ers_rural` collection:

```{r}
pubdata::meta(collection = "ers_rural", key = "ruc_2023", print = TRUE)
```

## `get()`: read dataset

-   download and read the dataset in specific data collection (argument`collection` and `key` must be included)

For example, to download and read the `ruc_2023` dataset in the `ers_rural` collection:

`pubdata::get(collection = "ers_rural", key = "ruc_2023")`

-   Here would be the first 10 rows of the `ruc_2023` dataset:

```{r}
#| echo: false
library(magrittr)
pubdata::get(collection = "ers_rural", key = "ruc_2023") %>% head(10)
```
